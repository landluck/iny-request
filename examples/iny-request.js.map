{"version":3,"file":"iny-request.js","sources":["../src/helpers/utils.ts","../src/helpers/buildUrl.ts","../src/xhr.ts","../src/iny-request.ts"],"sourcesContent":["const toString = Object.prototype.toString\n\nexport function isURLSearchParams(value: any): value is URLSearchParams {\n  return typeof value !== 'undefined' && value instanceof URLSearchParams\n}\n\nexport function isDate(value: any): value is Date {\n  return toString.call(value) === '[object Date]'\n}\n\nexport function isPlainObject(value: any): value is Object {\n  return toString.call(value) === '[object Object]'\n}","import { isURLSearchParams, isPlainObject, isDate } from './utils'\n\nfunction encode(value: string): string {\n  return encodeURIComponent(value)\n    .replace(/%40/gi, '@')\n    .replace(/%3A/gi, ':')\n    .replace(/%24/g, '$')\n    .replace(/%2C/gi, ',')\n    .replace(/%20/g, '+')\n    .replace(/%5B/gi, '[')\n    .replace(/%5D/gi, ']')\n}\n\nexport function buildURL(url: string, params?: any, paramsSerializer?: (params: any) => string) {\n  // 没有参数，直接返回 url\n  if (!params) return url\n\n  let resultURL: string = ''\n\n  // axios 这里直接每一个请求直接传入一个 paramsSerializer 函数，用来格式化参数的\n  // 所以这里我们先判断是否存在这个函数，有的话直接调用即可\n  // 同时给我们的 \bAxiosRequestConfig 中添加这个类型\n  if (paramsSerializer) {\n    resultURL = paramsSerializer(params)\n  } else if (isURLSearchParams(params)) {\n    // params 也有可能传入一个URLSearchParams 类型的数据，如果是，我们直接 toString 即可\n    resultURL = params.toString()\n  } else {\n    // 这里就需要对普通对象、数组来进行处理了\n    const part: string[] = []\n\n    Object.keys(params).forEach(key => {\n      let value = params[key]\n\n      // 过滤掉 null 和 undefined\n      if (value === null || typeof value === 'undefined') {\n        return\n      }\n\n      // 判断是否是数组, 数组需要将参数格式化为 'a[]=1&a[]=3&a[]=4' 这种\n      if (Array.isArray(value)) {\n        key += '[]'\n      } else {\n        // 这里将不是 数组的 数组转换为数组，方便后面循环处理\n        value = [value]\n      }\n\n      // 循环将 k v 处理成 ['a=1','b=2']，并放置于 part 容器中\n      value.forEach((val: any) => {\n\n        // 这里需要对时间对象单独处理\n        if (isDate(val)) {\n          val = val.toISOString()\n        \n        // 需要对对象json化处理\n        } else if (isPlainObject(val)) {\n          val = JSON.stringify(val)\n        }\n\n        // 这里是 axios 会讲 k 和 v 通过 url 编码，并且将一些特殊字符编译回来\n        part.push(`${encode(key)}=${val}`)\n      })\n    })\n\n    // 将 ['a=1','b=2'] 处理成 'a=1&b=2' 格式\n    resultURL = part.join('&')\n  }\n\n  if (resultURL) {\n    // 针对带有 # 哈希的 url 进行处理\n    const index = url.indexOf('#')\n    if (index !== -1) {\n      url = url.slice(0, index)\n    }\n\n    // 拼接 ？或者 &\n    url += (url.indexOf('?') === -1 ? '?' : '&') + resultURL\n  }\n\n  return url\n}\n","import { AxiosRequestConfig } from './types'\nimport { buildURL } from './helpers/buildUrl';\n\nexport default function xhr(options: AxiosRequestConfig): Promise<any> {\n  return new Promise((resolve, reject) => {\n    const { url, method, data, params, paramsSerializer } = options\n\n    const request = new XMLHttpRequest()\n\n    /*\n      * 这里使用我们的buildURL\n      * 大家可能注意到我们这里的 method 后面，添加了一个 ! ,那是因为在我们的\n      * AxioxRequestConfig 中，method 不是必须的参数，但这里是必须有的，所以我们在这里断言 method 肯定有值\n      * 在 ts 中可以在一个值后加 ! 来断言一个值不为空\n    */\n\n    request.open(method!, buildURL(url, params, paramsSerializer), true)\n\n    request.send(data)\n  })\n}","import xhr from './xhr'\nimport { AxiosRequestConfig } from './types'\n\nfunction axios(config: AxiosRequestConfig): Promise<any> {\n  return xhr(config)\n}\n\nexport default axios\n"],"names":[],"mappings":"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"}